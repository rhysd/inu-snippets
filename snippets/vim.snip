delete		augroup
snippet		augroup
abbr		augroup ... augroup END
	augroup ${1}
		autocmd!
		autocmd ${0}
	augroup END

delete		cpo_save
snippet		cpo_save
options		head
abbr		use cpo save
	let s:save_cpo = &cpo
	set cpo&vim
	${0}
	
	let &cpo = s:save_cpo
	unlet s:save_cpo

delete		NeoBundle
snippet		NeoBundle
alias		neobundle
abbr		NeoBundle ''
	NeoBundle '`getreg('+')=='' ? '<\`0\`>' : getreg('+')`'${0}

delete		NeoBundleLazy
snippet		NeoBundleLazy
alias		neobundlelazy
abbr		NeoBundleLazy '' {}
	NeoBundleLazy '`getreg('+')=='' ? '<\`0\`>' : getreg('+')`', {
			\ ${0}
			\ }

delete		autoload_function
snippet		autoload_function
alias		afunc
abbr		auto#load#func()
	function! `substitute(matchstr(substitute(expand('%:p:r'), '\\', '/', 'g'), '\/autoload\/\zs.*\ze'), '/', '#', 'g')`#${1:func_name}(${2})
		${0}
	endfunction

snippet		filter
abbr		filter(copy(), )
	filter(copy(${1}), ${0})

snippet		map
abbr		map(copy(), )
	map(copy(${1}), ${0})

snippet		save_pos
abbr		use pos save
	let pos_save = getpos('.')
	${0}
	call setpos('.', pos_save)

snippet		save_register
abbr		use register save
	let save_reg_$1 = getreg('${1}')
	let save_regtype_$1 = getregtype('$1')
	${0}
	call setreg('$1', save_reg_$1, save_regtype_$1)

snippet		save_option
abbr		use option save
	let $1_save = &${1}
	let &$1 = ${2}
	${0}
	let &$1 = $1_save


