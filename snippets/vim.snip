# Some snippets are imported from https://github.com/Shougo/neosnippet-snippets

delete		augroup
snippet		augroup
abbr		augroup ... augroup END
	augroup ${1}
		autocmd!
		autocmd ${0}
	augroup END

delete		autoload_function
snippet		autoload_function
alias		afunc
abbr		auto#load#func()
	function! `substitute(matchstr(substitute(expand('%:p:r'), '\\', '/', 'g'), '\/autoload\/\zs.*\ze'), '/', '#', 'g')`#${1:func_name}(${2}) abort
		${0}
	endfunction

delete		loaded
snippet		loaded
options		head
abbr		if exists(...) finish
	if (exists('g:loaded_`substitute(expand('%:t:r'), '\W', '_', 'g')`') && g:loaded_`substitute(expand('%:t:r'), '\W', '_', 'g')`) || &cp
		finish
	endif
	
	${0}
	
	let g:loaded_`substitute(expand('%:t:r'), '\W', '_', 'g')` = 1

snippet		prettyprint
abbr		echomsg PrettyPrint(...)
	echomsg PrettyPrint(${0})

snippet		let_autoload_global_var
abbr		let g:foo#bar = get(...)
alias		let_agvar
options		head
	let g:`substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\zs.*$'), '/', '#', 'g')`#${1:#:var_name} = get(g:, '`substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\zs.*$'), '/', '#', 'g')`#$1', ${2:#:default})

snippet		let_global_var
abbr		let g:foo = get(...)
alias		let_gvar
options		head
	let g:${1:#:name} = get(g:, '$1', ${2:#:default})

snippet		let_var
abbr		let ... = get(...)
options		head
	let ${1:#:scope}:${2:#:name} = get($1:, '$2', ${3:#:default})

snippet		echohl
abbr		echohl | ... | echohl None
options		head
	echohl ${1:ErrorMsg} | ${2:echomsg} ${0:#:msg} | echohl None

delete		redir
snippet		redir_var
abbr		redir =>
	redir => ${1:#:var}
		${0}
	redir END

snippet		redir_file
abbr		redir >
	redir! > ${1:#:file}
		${0}
	redir END

snippet		redir_register
abbr		redir @
	redir @${1:#:register}
		${0}
	redir END

snippet		function
abbr		func endfunc
alias		func
options		head
	function! ${1:#:func_name}(${2}) abort
		${0:TARGET}
	endfunction

snippet		try_catch
abbr		try catch
options		head
	try
		${1:TARGET}
	catch /${2:#:pattern}/
		${3}
	endtry

snippet		try_finally
abbr		try finally
alias		tryf
options		head
	try
		${1:TARGET}
	finally
		${2}
	endtry

snippet		save_pos
options		head
abbr		use pos save
	let pos_save = getpos('.')
	try
		${0}
	finally
		call setpos('.', pos_save)
	endtry

snippet		save_register
options		head
abbr		use register save
	let save_reg_$1 = getreg('${1}')
	let save_regtype_$1 = getregtype('$1')
	try
		${0}
	finally
		call setreg('$1', save_reg_$1, save_regtype_$1)
	endtry

snippet		save_option
options		head
abbr		use option save
	let $1_save = &${1}
	let &$1 = ${2}
	try
		${0}
	finally
		let &$1 = $1_save
	endtry
