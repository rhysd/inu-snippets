snippet		from_import
abbr		from ... import ...
options		head
	from ${1} import ${2}

snippet		from_import_as
abbr		from ... import ... as ...
options		head
	from ${1} import ${2} as ${3}

delete		class
snippet		class
abbr		class Class(...): ...
options		head
	class ${1:#:name}:
		${0}

snippet		class_inherit
abbr		class Class(...): ...
options		head
	class ${1:#:name}(${2:#:object}):
		${0}

snippet		class_description
abbr		class Class(...): "..."
options		head
	class ${1:#:name}(${2:#:object}):
		"""${3:#:class documentation}"""
		def __init__(self, ${4}):
			${0}

snippet     def
abbr        def function(...): ...
options     head
	def ${1:#:name}(${2}):
		${0:TARGET}

snippet		def_method
abbr		def method(self, ...): ...
options		head
	def ${1:#:name}(self, ${2}):
		${0:TARGET}

snippet		def_method_desctiption
abbr		def method(self, ...): "..."
options		head
	def ${1:#:name}(self, ${2}):
		"""${3:#:method documentation}"""
		${0:TARGET}

snippet		list_comprehension
abbr		[x for x in {list}]
alias		map
	[${1:#:expr} for ${2:#:args} in ${3:#:list}]

snippet		list_comprehension_if
abbr		[x for x in {list}]
alias		map
	[${1:#:expr} for ${2:#:args} in ${3:#:list} if ${3:#:condition}]

snippet		if_oneline
abbr		... if ... else ...
	${1:#:value_true} if ${2:#:condition} else ${3:#:value_false}

snippet		for_else
abbr		for ... else ...
options		head
	for ${1:#:iterator} in ${2:#:iterable}:
		${0:#:target}
	else:
		${3:#:finally}

snippet		while_else
abbr		while ... else ...
options		head
	while ${1:#:condition}:
		${0:#:body}
	else:
		${2:#:finally}

snippet		loop
abbr		while True: ...
options		head
	while True:
		${0:#:body}

snippet		with
abbr		with ... as ...:
	with ${1} as ${2}:
		${0}

snippet		description
abbr		"""..."""
options head
	"""${1}"""
	${0}

snippet     for
abbr        for ... in ...: ...
options     head
	for ${1:#:value} in ${2:#:list}:
		${0:TARGET}

snippet     if
abbr        if ...: ...
options     head
	if ${1:#:condition}:
		${0:TARGET}

snippet     elif
abbr        elif ...: ...
options     head
	elif ${1:#:condition}:
		${0}

snippet     else
abbr        else: ...
options     head
	else:
		${0}

snippet     ifmain
abbr        if __name__ == '__main__': ...
alias       main
options     head
	if __name__ == '__main__':
		${0:TARGET}

snippet     tryexcept
abbr        try: ... except ...: ...
options     head
	try:
		${1:TARGET}
	except ${2:#:ExceptionClass}:
		${3}

snippet     tryfinally
abbr        try: ... finally: ...
options     head
	try:
		${1:TARGET}
	finally:
		${2}

snippet     while
abbr        while ...: ...
options     head
	while ${1:#:condition}:
		${0:TARGET}

snippet     filter
abbr        [x for x in {list} if {condition}]
	[$1 for ${1:x} in ${2:#:list} if ${3:#:condition}]
