snippet import
abbr    import ... from ''
options head
	import ${1:#:modules} from '${2:#:module}';

snippet console_log_stringify
abbr    console.log(stringify())
options word
	console.log(JSON.stringify(${1}, null, 2));

snippet function
abbr    function() {}
	function ${1:#:name}(${2:#:params}) {
		${0:#:body}
	}

snippet	for
abbr	for(){}
options	head
	for (const ${1:#:iter}) {
		${0:#:BODY}
	}

snippet	switch
abbr	switch(...){}
options	head
	switch (${1:#:expr}) {
		case ${2:#:first}:
			${0:#:BODY}
			break;
		default:
			break;
	}

snippet	new_Promise
alias	Promise
abbr	new Promise(...)
	new Promise<${1:#:T}>((resolve, reject) => {
		${0:#:BODY}
	});

snippet	react_stateless_component
abbr	const C = props => ()
options head
	interface ${1:#:Component}Props {
		${2:#:props}
	}
	
	const $1: React.StatelessComponent<$1Props> = props => ${0:#:BODY};
	export default $1;

snippet	react_component_class
abbr	React.Component
options	head
	interface ${1:#:Component}Props {
		${2:#:props}
	}
	
	export default class $1 extends React.Component<$1Props, ${2:{\}}> {
		render() {
			return (
				${3:#:ELEMENT}
			);
		}
	}

snippet	react_pure_class
abbr	React.PureComponent
options	head
	interface ${1:#:Component}Props {
		${2:#:props}
	}
	
	export default class $1 extends React.PureComponent<$1Props, {}> {
		render() {
			return (
				${0:#:ELEMENT}
			);
		}
	}

snippet	debug_log_expr
abbr	log('var', var)
	console.log('${1:#:expr}: ', $1);

snippet	test_ava
abbr	test('', t => )
options	head
	test('${1:#:description}', t => {
		${0:#:BODY}
	});

snippet	test_ava_async
abbr	test('', async(t) => )
options	head
	test('${1:#:description}', async(t) => {
		${0:#:BODY}
	});

snippet	test_mocha_describe
abbr	describe('', ...)
options	head
	describe('${1:#:description}', function () {
		${0:#:BODY}
	});

snippet	test_mocha_it
abbr	it('', ...)
options	head
	it('${1:#:description}', function () {
		${0:#:BODY}
	});

snippet	tslint_disable_comment
abbr	/* tslint:disable */
options	head
	/* tslint:disable:${1:#:space-sep-rules} */
	${0:#:BODY}
	/* tslint:enable:$1 */

snippet	bind_this
abbr	a = a.bind(this);
options	head
	this.${1:#:var} = this.$1.bind(this);

snippet	redux_connect_react_component
abbr	connect(select)(App)
	function select(s: State): ${1:#:name}Props {
		return s;
	}
	
	const $1Container = connect(select)($1);
	export default $1Container;

snippet	ts_ignore
abbr	@ts-ignore:
options	head
	// @ts-ignore: ${1:#:reason}
