snippet	function
alias	func
abbr	funciton (){}
options word
	function ${1:#:name}(${2:#:params}) {
		${0:#:body}
	}

snippet console_log
abbr    console.log();
options word
	console.log(${0:#:args});

snippet console_log_stringify
abbr    console.log(JSON.stringify());
options word
	console.log(JSON.stringify(${0:#:arg}));

snippet	console_dump_var
abbr	console.log('foo', foo)
options	word
	console.log('${1:#:var_name}', $1)${0}

snippet	require
abbr	var = require();
options head
	var ${1:#:module} = require('$1');

snippet	require_func
abbr	var foo = require().foo;
options head
	var ${1:#:func} = require('${2:#:module}').$1;

snippet import_all
abbr    import * as ... from '...'
options head
	import * as ${1:#:name} from '$1';

snippet import
abbr    import {...}
options head
	import ${1:#:names} from '${2:#:module}';

snippet react_component_def
abbr	extends React.Component
options	head
	export default class ${1:#:name} extends React.Component {
		render() {
			return (
				${0}
			);
		}
	}
	
	$1.propTypes = {
	}

snippet	jsx
abbr	<foo><foo/>
	<${1:div} ${2:#:props}>
		${0}
	</$1>

snippet	for_of
abbr	for of ...
options	head
	for (const ${1:#:iter} of ${2:#:iterable}) {
		${0:#:BODY}
	}

snippet	for_in
abbr	for in ...
options	head
	for (const ${1:#:key} in ${2:#:iterable}) {
		${0:#:BODY}
	}

snippet	switch
abbr	switch(...){}
options	head
	switch (${1:#:expr}) {
		${0:#:BODY}
		default:
			break;
	}

snippet	case
abbr	case ...: {...}
options	head
	case ${1:#:value}: {
		${0:#:BODY}
		break;
	}

snippet	doc_comment
abbr	/***/
options	head
	/**
	 * ${0:#:body}
	 */

snippet	new_Promise
alias	Promise
abbr	new Promise(...)
	new Promise((resolve, reject) => {
		${0:#:BODY}
	});
